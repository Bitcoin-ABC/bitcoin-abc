# Application Configuration
NODE_ENV=development
LOG_LEVEL=info

# Database Connection String (NeonDB/Postgres)
DATABASE_URL=postgresql://user:password@host:port/dbname?sslmode=require

# Chronik Configuration
# These servers must be indexed with agora.py plugin for agora functionality
CHRONIK_URLS=https://chronik-native2.fabien.cash,https://chronik-native3.fabien.cash,https://chronik.pay2stay.com/xec2,https://chronik-native1.fabien.cash,https://chronik1.alitayin.com,https://chronik2.alitayin.com
CHRONIK_STRATEGY=closestFirst

# Cron Schedule (every 6 hours)
CRON_SCHEDULE=0 */6 * * *

# Initial Indexing Configuration
# Set this to start indexing from a specific block height (e.g., 900000 for testing)
# For prod, should be 0 to index everything
INITIAL_INDEX_START=850000

# Indexing Performance Configuration
# Target number of transactions per batch (default: 30000)
# Lower values = smaller batches = less memory usage but slower processing
# Higher values = larger batches = faster processing but more memory usage
# OPTIMAL for Railway $5 hobby plan (8GB RAM, 8 vCPU): 30000
TARGET_TX_COUNT_PER_BATCH=30000

# Maximum number of batches to process concurrently (default: 12)
# Lower values = less memory usage but slower processing
# Higher values = faster processing but more memory usage
# OPTIMAL for Railway $5 hobby plan (8GB RAM, 8 vCPU): 12
# WARNING: 13+ batches may cause API rate limiting or connection issues
INDEXING_MAX_CONCURRENT_BATCHES=12 
