[package]
name = "ecash-secp256k1"
version = "0.30.0"
authors = [
    "Dawid Ciężarkiewicz <dpc@ucore.info>",
    "Andrew Poelstra <apoelstra@wpsoftware.net>",
    "Tobias Ruck <tobias.ruck@be.cash>",
]
license = "CC0-1.0"
homepage = "https://e.cash/"
repository = "https://github.com/Bitcoin-ABC/bitcoin-abc/"
description = "Rust wrapper library for Pieter Wuille's `libsecp256k1`. Implements ECDSA, eCash Schnorr and BIP 340 signatures for the SECG elliptic curve group secp256k1 and related utilities."
keywords = [ "crypto", "ECDSA", "secp256k1", "libsecp256k1", "bitcoin" ]
readme = "README.md"
edition = "2021"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["std"]
std = ["alloc", "secp256k1-sys/std", "rand?/std", "rand?/std_rng", "hashes?/std"]
# allow use of Secp256k1::new and related API that requires an allocator
alloc = ["secp256k1-sys/alloc"]
recovery = ["secp256k1-sys/recovery"]
lowmemory = ["secp256k1-sys/lowmemory"]
global-context = ["std"]
# disable re-randomization of the global context, which provides some
# defense-in-depth against sidechannel attacks. You should only use
# this feature if you expect the `rand` crate's thread_rng to panic.
# (If you are sure the `rand` and `std` features will not be enabled, e.g.
# if you are doing a no-std build, then this feature does nothing
# and is not necessary.)
global-context-less-secure = ["global-context"]

[dependencies]
secp256k1-sys = { version = "0.10.0", default-features = false, path = "./ecash-secp256k1-sys", package = "ecash-secp256k1-sys" }

hashes = { package = "bitcoin_hashes", version = "0.14", default-features = false, optional = true }
rand = { version = "0.8", default-features = false, optional = true }
serde = { version = "1.0.103", default-features = false, optional = true }

[dev-dependencies]
rand_core = "0.6"
serde_cbor = "0.10.0"
serde_test = "1.0.19"
bincode = "1.3.3"
hex_lit = "0.1.1"

[target.wasm32-unknown-unknown.dev-dependencies]
wasm-bindgen-test = "0.3"
getrandom = { version = "0.2", features = ["js"] }

[lints.rust]
unexpected_cfgs = { level = "deny", check-cfg = ['cfg(bench)', 'cfg(secp256k1_fuzz)', 'cfg(rust_secp_no_symbol_renaming)'] }
